#!/usr/bin/bash
set -eu

########## VARIABLES ##########
### ANSI ESCAPE code ###
prefix="\e["
suffix="m"
SGRRESET="${prefix}${suffix}"
BOLD="${prefix}1${suffix}"
RED="${prefix}31${suffix}"
GREEN="${prefix}32${suffix}"
YELLOW="${prefix}33${suffix}"
BLUE="${prefix}34${suffix}"
MAGENTA="${prefix}35${suffix}"
CYAN="${prefix}36${suffix}"
WHITE="${prefix}37${suffix}"
### FLAG ###
FLAG=false

########## functions ##########
# error message
error(){
    printf "${RED}[error]${SGRRESET}: ${1}\n"
}

# confirmation message
confirmation(){
    printf "${CYAN}[confirmation]${SGRRESET}: ${1}\n"
}

########## Title ##########
printf "\n${BOLD}${MAGENTA}EASY ARCHLINUX INSTALLER (xfce4)${SGRRESET}\n\n"

########## set user password ##########
if [[ ! -v EALI_USER_PASSWD ]]
then
    read -sp "Type user password : " EALI_USER_PASSWD 
    echo "" 
fi 
echo ""

# Package upgrade
sudo -K
yay --sudoflags -S --noconfirm -Syu <<EOF
${EALI_USER_PASSWD}
EOF

# Display server
sudo -K
yay --sudoflags -S --noconfirm -S xorg-server <<EOF
${EALI_USER_PASSWD}
EOF
echo ""

# Installation of xfce4 has a question
# xfce4
sudo -K
sudo -S pacman -S xfce4<<EOF
${EALI_USER_PASSWD}

y
EOF

# Display Driver
printf "This is graphics hardware information of this computer \n"
printf "==================================================\n"
lspci -k | grep -EA3 "VGA|3D|Display"
printf "==================================================\n"

if [[ ! -v EALI_DISPLAY_DRIVER || "${EALI_DISPLAY_DRIVER})" = "" ]]
then
    while true
    do
        read -p "type display driver name : " EALI_DISPLAY_DRIVER
        if [[ "${EALI_DISPLAY_DRIVER}" = "" ]]
        then
            confirmation "No display driver specified. Do you want to skip installing the display driver? "
            read -p " y|Y for yes, any other key for No : " str
            case $str in
                y|Y)
                    echo ""
                    break;;
                *)
                    echo "Please try again";;
            esac
        else
            confirmation " display driver is '${EALI_DISPLAY_DRIVER}'"
            read -p " y|Y for yes, any other key for No : " str
            case $str in
                y|Y)
                    echo ""
                    break;;
                *)
                    echo "Please try again";;
            esac
        fi
    done
fi 



# Display driver
if [[ "${EALI_DISPLAY_DRIVER}" = "" ]]
then
    :
else
    sudo -K
    yay --sudoflags -S --noconfirm -S  <<EOF
${EALI_USER_PASSWD}
EOF
fi

# Display manager
sudo -K
yay --sudoflags -S --noconfirm -S lightdm lightdm-gtk-greeter light-locker <<EOF
${EALI_USER_PASSWD}
EOF

cat <<EOF > ${HOME}/.xprofile
#!/bin/sh
# "light-locker-command -1" screen lock 
light-locker --lock-on suspend &
EOF

# enable lightdm.service
sudo -K
sudo -S systemctl enable lightdm <<EOF
${EALI_USER_PASSWD}
EOF

# Audio
sudo -K
yay --sudoflags -S --noconfirm -S pulseaudio pavucontrol <<EOF
${EALI_USER_PASSWD}
EOF

# fonts
sudo -K
yay --sudoflags -S --noconfirm -S noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra <<EOF
${EALI_USER_PASSWD}
EOF

cat <<EOF >~/local.conf.temp
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
  <alias>
    <family>serif</family>
    <prefer>
      <family>Noto Serif</family>
      <family>Noto Serif CJK JP</family>
    </prefer>
  </alias>
  <alias>
    <family>sans-serif</family>
    <prefer>
      <family>Noto Sans</family>
      <family>Noto Sans CJK JP</family>
    </prefer>
  </alias>
  <alias>
    <family>monospace</family>
    <prefer>
      <family>Noto Sans Mono</family>
      <family>Noto Sans Mono CJK JP</family>
    </prefer>
  </alias>
</fontconfig>
EOF

sudo -K
sudo -S cp ${HOME}/local.conf.temp /etc/fonts/local.conf<<EOF
${EALI_USER_PASSWD}
EOF
fc-cache -f
rm ${HOME}/local.conf.temp
# Japanese input method
sudo -K
yay --sudoflags -S --noconfirm -S fcitx fcitx-mozc fcitx-configtool <<EOF
${EALI_USER_PASSWD}
EOF
echo ""
sudo -K
sudo -S pacman -S fcitx-im <<EOF
${EALI_USER_PASSWD}

y
EOF

cat <<EOF >> ${HOME}/.xprofile

# for fcitx
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
EOF
fcitx

# terminal
sudo -K
yay --sudoflags -S --noconfirm -S xterm xorg-xinit xorg-xrdb <<EOF
${EALI_USER_PASSWD}
EOF

cat <<EOF >~/.xinitrc
[[ -f ~/.Xresources ]] && xrdb -merge -I{$HOME} ~/.Xresources
EOF
cat <<EOF >~/.Xresources
xterm*termName:            xterm-256color
xterm*locale:              true
xterm*selectToClipboard:   true
xterm*saveLines:           4096
xterm*metaSendsEscape: true
xterm*faceName: HackGen35Console-Reguler:size=10:antialias=false
xterm*font: 7x13

URxvt.perl-ext-common:      xim-onthespot
URxvt.inputMethod:          fcitx
URxvt*preeditType:          OnTheSpot
EOF

# fonts for terminal
sudo -K
yay --sudoflags -S --noconfirm -S ttf-hackgen <<EOF
${EALI_USER_PASSWD}
EOF

# utils
sudo -K
yay --sudoflags -S --noconfirm -S xorg-xset <<EOF
${EALI_USER_PASSWD}
EOF

cat <<EOF > ${HOME}/locale.conf.temp
LANG=ja_JP.UTF-8
EOF

sudo -K
sudo -S cp ${HOME}/locale.conf.temp /etc/locale.conf <<EOF
${EALI_USER_PASSWD}
EOF
rm ${HOME}/locale.conf.temp

# Display environment
sudo -K
yay --sudoflags -S --noconfirm -S xfce-goodies gvfs <<EOF
${EALI_USER_PASSWD}
EOF

########## Install finished ##########

printf "\n\n==============================\n"
printf "${GREEN}${BOLD}Successfully Installed!!${SGRRESET} \n"
printf "==============================\n\n"